<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-05-30T09:51:14+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">in limbo</title><subtitle>nothing much</subtitle><author><name>segyoung</name><email>sseymorrr@gmail.com</email></author><entry><title type="html">[Xcode] 개발용 인증서를 만들고 실제 기기에서 테스트 해보기</title><link href="http://localhost:4000/ios/xcode/certificates/" rel="alternate" type="text/html" title="[Xcode] 개발용 인증서를 만들고 실제 기기에서 테스트 해보기" /><published>2024-05-28T00:00:00+09:00</published><updated>2024-05-28T00:00:00+09:00</updated><id>http://localhost:4000/ios/xcode/certificates</id><content type="html" xml:base="http://localhost:4000/ios/xcode/certificates/"><![CDATA[<p align="center"><img width="300" height="300" src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/2f7c3653-d46e-4c4c-8042-15d4ee3a3a15" /></p>

<p>안드로이드 개발해본 사람은 알겠지만 안드로이드 네이티브는 실제 기기를 통해 테스트하며 디버깅하는 과정이 매우 간단함</p>

<p>그냥 컴퓨터에 폰을 연결하면 끝 👍<br />
안드로이드 스튜디오가 알아서 기기를 인식하기 때문에 코드를 바로 해당 기기에서 실행할 수 있음</p>

<p><span style="font-size:150%"><strong>그런데</strong></span> ios는 안드로이드처럼 그냥 컴퓨터에 기기 연결해서 바로바로 디버깅을 할 수 없음</p>

<center>처음엔 이게 너무 당황스러웠음... </center>
<blockquote>
  <p>“아니 고작 디버깅 하나 하겠다는데 이렇게까지 까다로워야 하나?”</p>
</blockquote>

<p>싶겠지만… 일단 애플은 개발 중인 앱이더라도 이 앱의 안전성이 증명된 후 인증된 기기에서만 실행이 가능하다는 것만 염두에 두고 시작해보자!</p>

<p class="notice--info">‼️ 이 글은 애플 개발자 사이트에서 앱 번들 ID가 추가되었음을 가정하고 작성됨</p>

<h2 id="1️⃣-필요한-준비물">1️⃣ 필요한 준비물</h2>
<p><strong><span style="background-color:yellow">1. CSR</span></strong></p>
<ul>
  <li>애플에서 발급해주는 개발자 인증서</li>
  <li>인증서를 발급받기 위해 필요한 일종의 자격 증명</li>
</ul>

<p class="notice--primary">📌 참고: 이 파일을 통해 인증서를 만들어 keychain access에 저장하게 되면 공개키 - 개인 키 쌍이 자동으로 생성되는데 이 개인키는 개발하는 개발자들끼리 공유하여 사용하게 됨 (개인 키가 없으면 인증서 사용 불가)</p>

<p><strong><span style="background-color:yellow">2. 인증서</span></strong></p>
<ul>
  <li>내가 만드는 앱의 안전성과 신뢰성이 보장됨을 증명하는 애플로부터 받는 인증서</li>
  <li>CSR을 통해 만들 수 있음</li>
</ul>

<blockquote>
  <p>이 단계에서 “음? 그럼 이제 앱이 빌드되겠지?” 라고 생각하면 오산이고요</p>
</blockquote>

<p>아까 안드로이드는 <strong>아무 기기</strong>나 컴퓨터에 연결해서 바로 디버깅을 해볼 수 있다 했으니 iOS는 뭔가 다르겠죠?<br />
바로 <strong>앱을 실행할 수 있는 기기 정보에 대한 파일이 따로 필요</strong>함</p>

<p><strong><span style="background-color:yellow">3. 프로비져닝 프로파일</span></strong></p>
<ul>
  <li>개발 중인 앱이 실행될 수 있는 기기에 대한 정보(+α)가 들어있음</li>
  <li>개발용으로 코드를 디버깅 할 때 <strong>인증된 기기만</strong> 앱을 실행시킬 수 있기 때문</li>
</ul>

<hr />

<p>ios 앱을 개발하는 데 있어서 필요한 인증서는 2가지!</p>
<ol>
  <li>개발용 인증서: 개발 시 실제 기기에서 디버깅 할 때 필요</li>
  <li>배포용 인증서: 앱스토어에 앱을 배포할 때 필요</li>
</ol>

<p>배포용 인증서에 관해서는 Archive와 함께 따로 정리할 거라 오늘은 일단 개발용 인증서로 코드를 빌드하고 실제 기기에서 테스트할 수 있도록 하는 것이 목표임!!!</p>

<h2 id="2️⃣-automatically-manage-signing이란">2️⃣ Automatically manage signing이란?</h2>
<p>Xcode에서 앱 서명은 <code class="language-plaintext highlighter-rouge">signing &amp; capability</code> 탭에서 관리하는데, 이 탭에서 <code class="language-plaintext highlighter-rouge">Automatically manage signing</code> 체크 옵션부터 확인해보자.</p>

<p>이 옵션을 활성화하면 위에 언급한 인증서와 프로파일을 <span style="color:red">Xcode가 자동으로 생성</span>해준다.</p>

<blockquote>
  <p>“편리하고 좋은데 그냥 인증서 같은 거 만들지 말고 이 옵션을 적극 활용하면 안될까요?”</p>
</blockquote>

<p>여러번 언급했지만 <strong>실제 기기에서</strong> 테스트해보고 싶으면 이 체크 옵션을 무조건 해제하고 따로 인증서를 꼭 만들어줘야 함<br />
<strong>안 그러면 에뮬레이터에서만 돌아감… 😇</strong></p>

<h2 id="3️⃣-개발용-인증서-만들기">3️⃣ 개발용 인증서 만들기</h2>

<p class="notice--info">✋ 애플 개발자 계정 만드는 과정은 생략</p>

<h3 id="1-csr-파일-만들기">1. CSR 파일 만들기</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Keychain Access</code> → <code class="language-plaintext highlighter-rouge">Certificate Assistant</code> → <code class="language-plaintext highlighter-rouge">Request a Certificate From a Certificate Authority</code> 
  <img width="694" alt="Screenshot 2024-05-29 at 7 11 08 PM" src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/0e7bf735-3b96-44c4-bdc7-cb908604c8eb" /></li>
  <li>
    <p>이메일과 이름을 적고 <code class="language-plaintext highlighter-rouge">Saved to disk</code>와 <code class="language-plaintext highlighter-rouge">Let me specify key pair information</code> 옵션을 체크 활성화한 뒤 <code class="language-plaintext highlighter-rouge">continue</code><br />
  <img width="634" alt="Screenshot 2024-05-29 at 16 45 50" src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/c251da85-4637-4683-94cc-97606aa084b7" />
  <img width="634" alt="Screenshot 2024-05-29 at 16 46 27" src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/c9947596-8268-4b83-8d45-04592076ec05" /></p>
  </li>
  <li>CSR 파일 저장된 것 확인 <code class="language-plaintext highlighter-rouge">.CertificateSigningRequest</code></li>
</ul>

<h3 id="2-인증서-만들기">2. 인증서 만들기</h3>
<p>2가지 방법을 통해 만들 수 있는데, 개인적으로는 Xcode에서 연동된 계정을 통해 만드는 게 가장 확실한 방법 같다.<br />
모두 정리해놓을 거긴 하지만 <strong>그냥 xcode에서 만드는 것이 정신건강에 이롭다👍</strong></p>

<h4 id="1-xcode에서-인증서-만들기">1) xcode에서 인증서 만들기</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Xcode</code> → <code class="language-plaintext highlighter-rouge">Accounts</code> → 애플 개발자 계정으로 로그인<br />
  <img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/b52ddf4a-b3a7-46a7-9e6c-8965b948e96c" alt="Screenshot 2024-05-29 at 14 49 17" /></li>
  <li>좌측 하단 <code class="language-plaintext highlighter-rouge">+</code> 버튼 → <code class="language-plaintext highlighter-rouge">Apple Development</code> 클릭
  <img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/d248ed12-7a9b-4b18-810c-de9203380b2a" alt="Screenshot 2024-05-29 at 14 51 55" /><br />
  <img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/35229249-38e8-443a-8e7d-bc1ea6cb6bdb" alt="Screenshot 2024-05-29 at 14 53 16" /></li>
  <li>애플 개발자 계정 → <code class="language-plaintext highlighter-rouge">Certificates, Identifiers &amp; Profiles</code>에 새 인증서가 추가된 것을 확인
  <img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/034f5e74-acc7-437e-bd2d-8c577b00710d" alt="photo_2024-05-29 19 24 16" /></li>
</ul>

<h4 id="2-애플-개발자-사이트에서-인증서-만들기">2) 애플 개발자 사이트에서 인증서 만들기</h4>
<ul>
  <li>애플 개발자 계정 → <code class="language-plaintext highlighter-rouge">Certificates, Identifiers &amp; Profiles</code> → <code class="language-plaintext highlighter-rouge">+</code> 버튼 클릭
<img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/17d31a7e-f072-4a43-8e98-cb4dc11d7398" alt="photo_2024-05-29 19 24 24" /></li>
  <li><code class="language-plaintext highlighter-rouge">Software</code> → <code class="language-plaintext highlighter-rouge">Apple Development</code> 체크한 뒤 필요한 서비스 체크 → <code class="language-plaintext highlighter-rouge">continue</code>
    <ul>
      <li>만약 앱에 푸쉬 알림 기능이 있다면 <code class="language-plaintext highlighter-rouge">Apple Push Notification service SSL (Sandbox)</code> 체크하여 진행: 일단 코드를 기기에서 빌드하는 게 목적이라면 Services는 체크하지 않고 넘어가도 됨! 
<img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/0b88d3de-0f46-4de2-80fc-9c8df21ad6a5" alt="Certificates, Identifiers   Profiles - Apple Developer copy" /></li>
    </ul>
  </li>
  <li>앞에서 만든 CSR 파일을 첨부한 뒤 <code class="language-plaintext highlighter-rouge">continue</code>
<img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/aa7c20db-6870-4666-9c75-a4254c7663ed" alt="Screenshot 2024-05-30 at 09 12 14" /></li>
  <li>인증서를 다운로드 받은 뒤 <code class="language-plaintext highlighter-rouge">더블 클릭</code>하면 <code class="language-plaintext highlighter-rouge">Keychain access</code>에 새로운 인증서가 추가된 것을 확인할 수 있음!
    <ul>
      <li>공개키 + 개인키 한 쌍이 존재해야 하고 하단 개인 키가 없으면 인증서 사용 불가
<img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/657ed1e3-9fb9-49f9-9b21-67b831474d2e" alt="Screenshot 2024-05-30 at 09 13 57" /></li>
    </ul>
  </li>
</ul>

<h3 id="3-프로비져닝-프로파일-설정하기">3. 프로비져닝 프로파일 설정하기</h3>
<p>먼저 애플 개발자 사이트에 <strong>기기 등록</strong>부터 해야됨<br />
애플 개발자 사이트에서 <code class="language-plaintext highlighter-rouge">Devices</code>탭에 들어간 뒤 <code class="language-plaintext highlighter-rouge">+</code> 버튼 눌러 UDID를 추가</p>

<p class="notice--primary">📌 UDID(unique device identifier): 애플 기기에 할당되는 유일한 24글자의 문자열</p>
<p class="notice--danger">✋ 기기 등록 수가 제한되어 있는 애플 개발자 서비스를 사용하는 경우 기기 추가 시 24 ~ 72시간이 소요될 수 있음</p>

<h4 id="1-이미-개발용-프로파일이-생성되어-있는-경우">1) 이미 개발용 프로파일이 생성되어 있는 경우</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Profiles</code> 접속하여 만들어 놓은 프로파일 클릭 → <code class="language-plaintext highlighter-rouge">Edit</code> → <code class="language-plaintext highlighter-rouge">Devices</code>에서 추가한 기기를 체크 활성화
 <img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/255549ae-2e11-47d6-821c-125d6824b158" alt="Screenshot 2024-05-30 at 09 31 46" /></li>
</ul>

<h4 id="2-새로-프로파일을-만들어야-하는-경우">2) 새로 프로파일을 만들어야 하는 경우</h4>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Profiles</code> 접속 → <code class="language-plaintext highlighter-rouge">+</code>버튼 → <code class="language-plaintext highlighter-rouge">iOS App Development</code> 체크 → <code class="language-plaintext highlighter-rouge">continue</code>
<img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/e1106d33-0357-4925-8f39-a2b48c82eceb" alt="Screenshot 2024-05-30 at 09 33 21" /></li>
  <li>만든 앱의 번들 id를 선택한 뒤 <code class="language-plaintext highlighter-rouge">continue</code>
<img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/f1accb6b-21ef-4472-9254-d28e7772e068" alt="Screenshot 2024-05-30 at 09 34 54" /></li>
  <li>만들었던 인증서를 선택한 뒤 <code class="language-plaintext highlighter-rouge">continue</code>
<img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/36c5e120-f5c6-4a31-aa0b-b33c65c2bb23" alt="Screenshot 2024-05-30 at 09 39 00" /></li>
  <li>해당 앱을 실행하고 싶은 기기를 모두 선택한 뒤 <code class="language-plaintext highlighter-rouge">continue</code>
<img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/190ff7be-3705-4c0b-a945-2d69d190ebd0" alt="Screenshot 2024-05-30 at 09 39 57" /></li>
  <li>프로파일 이름을 설정한 뒤 <code class="language-plaintext highlighter-rouge">generate</code>
<img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/1e6b6c36-ccaa-49d4-b078-58b21bd6613c" alt="Screenshot 2024-05-30 at 09 41 30" /></li>
  <li>만든 프로파일을 다운로드 받은 뒤 Xcode의 <code class="language-plaintext highlighter-rouge">signing &amp; capability</code>에서 <code class="language-plaintext highlighter-rouge">Import Profile</code> → 다운로드 받은 프로파일을 선택하면 세팅 끝!</li>
</ul>

<p class="notice--danger">✋ <strong>개발용 프로파일의 경우 테스트하고 싶은 기기가 새로 추가될 때마다 프로파일을 수정하여 다운로드 받은 뒤 다시 Xcode에서 import 해야함</strong> <del>(왜 이렇게 불편하게 만들었는지 모르겠다)</del></p>

<p>여기까지 따라왔다면 Xcode의 <code class="language-plaintext highlighter-rouge">signing &amp; capability</code> → <code class="language-plaintext highlighter-rouge">Debug</code> 탭에서 헤맬 일은 없을 것 같다!</p>

<p>당장 iOS 앱을 실제 기기에서 실행해보고 싶은데 인증서 때문에 어려움을 겪었던 분들께 도움이 되는 글이었기를 바라며…</p>

<p>현재 진행하고 있는 프로젝트의 앱을 배포해야되는 시점에 배포용 인증서와 관련해 글을 또 써보려고 하니 기대해주세용</p>

<p>잘못된 정보가 있다면 언제든지 피드백 부탁드립니다:)</p>]]></content><author><name>segyoung</name><email>sseymorrr@gmail.com</email></author><category term="[&quot;ios&quot;, &quot;xcode&quot;]" /><category term="xcode" /><category term="앱 배포" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">[Flutter Web] 이미지를 받아와 크롭하기</title><link href="http://localhost:4000/flutter/solutions/how_to_get_image_flutter_web/" rel="alternate" type="text/html" title="[Flutter Web] 이미지를 받아와 크롭하기" /><published>2024-05-17T00:00:00+09:00</published><updated>2024-05-17T00:00:00+09:00</updated><id>http://localhost:4000/flutter/solutions/how_to_get_image_flutter_web</id><content type="html" xml:base="http://localhost:4000/flutter/solutions/how_to_get_image_flutter_web/"><![CDATA[<h3 id="1️⃣-목표">1️⃣ 목표</h3>
<p>flutter 라이브러리를 사용하여 파일 시스템에서 이미지를 받아온 뒤 이미지를 자른 후 화면에 노출시키기</p>

<h3 id="2️⃣-사용한-라이브러리">2️⃣ 사용한 라이브러리</h3>
<ol>
  <li>image_picker_web: <a href="https://pub.dev/packages/image_picker_web">https://pub.dev/packages/image_picker_web</a></li>
  <li>image_cropper: <a href="https://pub.dev/packages/image_cropper">https://pub.dev/packages/image_cropper</a></li>
</ol>

<h3 id="3️⃣-기본-세팅">3️⃣ 기본 세팅</h3>
<h4 id="1-pubspecyaml">1. pubspec.yaml</h4>
<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="na">dependencies</span><span class="pi">:</span>
  <span class="na">flutter</span><span class="pi">:</span>
    <span class="na">sdk</span><span class="pi">:</span> <span class="s">flutter</span>
  <span class="na">image_picker_web</span><span class="pi">:</span> <span class="s">^3.1.1</span>
  <span class="na">http</span><span class="pi">:</span> <span class="s">^0.13.5</span>
  <span class="na">image_cropper</span><span class="pi">:</span> <span class="s">^3.0.1</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h4 id="2-webindexhtml">2. web/index.html</h4>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;head&gt;</span>
  <span class="c">&lt;!-- Croppie --&gt;</span>
  <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">href=</span><span class="s">"https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.css"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;script </span><span class="na">defer</span> <span class="na">src=</span><span class="s">"https://cdnjs.cloudflare.com/ajax/libs/exif-js/2.3.0/exif.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;/head&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h3 id="-주의-사항"><img width="25" alt="star1" src="https://user-images.githubusercontent.com/78655692/151471925-e5f35751-d4b9-416b-b41d-a059267a09e3.png" /> 주의 사항</h3>
<p class="notice--warning">플러터 웹에서 로컬 파일 시스템에 직접 접근하는 것(File 형태로)은 보안상의 이유로 허용되지 않으므로 blob 형태의 url로 변환해야 함.</p>
<h3 id="4️⃣-전체-소스-코드-maindart">4️⃣ 전체 소스 코드 (main.dart)</h3>
<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="s">'dart:html'</span> <span class="k">as</span> <span class="n">html</span><span class="o">;</span>

<span class="kn">import</span> <span class="s">'package:flutter/material.dart'</span><span class="o">;</span>
<span class="kn">import</span> <span class="s">'package:image_cropper/image_cropper.dart'</span><span class="o">;</span>
<span class="kn">import</span> <span class="s">'package:image_picker_web/image_picker_web.dart'</span><span class="o">;</span>

<span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">runApp</span><span class="p">(</span><span class="kd">const</span> <span class="n">MyApp</span><span class="p">());</span>
<span class="p">}</span>

<span class="kd">class</span> <span class="nc">MyApp</span> <span class="kd">extends</span> <span class="n">StatelessWidget</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="n">MyApp</span><span class="p">({</span><span class="k">super</span><span class="o">.</span><span class="na">key</span><span class="p">});</span>

  <span class="c1">// This widget is the root of your application.</span>
  <span class="nd">@override</span>
  <span class="n">Widget</span> <span class="n">build</span><span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="kd">const</span> <span class="n">MaterialApp</span><span class="p">(</span>
      <span class="nl">title:</span> <span class="s">'Flutter Demo'</span><span class="p">,</span>
      <span class="nl">home:</span> <span class="n">MyHomePage</span><span class="p">(</span><span class="nl">title:</span> <span class="s">'Image cropper! 🍏'</span><span class="p">),</span>
    <span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="kd">class</span> <span class="nc">MyHomePage</span> <span class="kd">extends</span> <span class="n">StatefulWidget</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="n">MyHomePage</span><span class="p">({</span><span class="k">super</span><span class="o">.</span><span class="na">key</span><span class="p">,</span> <span class="kd">required</span> <span class="k">this</span><span class="o">.</span><span class="na">title</span><span class="p">});</span>

  <span class="kd">final</span> <span class="kt">String</span> <span class="n">title</span><span class="p">;</span>

  <span class="nd">@override</span>
  <span class="n">State</span><span class="p">&lt;</span><span class="n">MyHomePage</span><span class="p">&gt;</span> <span class="n">createState</span><span class="p">()</span> <span class="o">=</span><span class="p">&gt;</span> <span class="n">_MyHomePageState</span><span class="p">();</span>
<span class="p">}</span>

<span class="kd">class</span> <span class="nc">_MyHomePageState</span> <span class="kd">extends</span> <span class="n">State</span><span class="p">&lt;</span><span class="n">MyHomePage</span><span class="p">&gt;</span> <span class="p">{</span>
  <span class="kt">String</span> <span class="n">croppedBlobUrl</span> <span class="o">=</span> <span class="s">''</span><span class="p">;</span>
  <span class="kt">String</span> <span class="n">fileName</span> <span class="o">=</span> <span class="s">''</span><span class="p">;</span>

  <span class="nd">@override</span>
  <span class="n">Widget</span> <span class="n">build</span><span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="n">Scaffold</span><span class="p">(</span>
      <span class="nl">appBar:</span> <span class="n">AppBar</span><span class="p">(</span>
        <span class="nl">backgroundColor:</span> <span class="n">Theme</span><span class="o">.</span><span class="na">of</span><span class="p">(</span><span class="n">context</span><span class="p">)</span><span class="o">.</span><span class="na">colorScheme</span><span class="o">.</span><span class="na">inversePrimary</span><span class="p">,</span>
        <span class="nl">title:</span> <span class="n">Text</span><span class="p">(</span><span class="n">widget</span><span class="o">.</span><span class="na">title</span><span class="p">),</span>
      <span class="p">),</span>
      <span class="nl">body:</span> <span class="n">SingleChildScrollView</span><span class="p">(</span>
        <span class="nl">scrollDirection:</span> <span class="n">Axis</span><span class="o">.</span><span class="na">vertical</span><span class="p">,</span>
        <span class="nl">child:</span> <span class="n">Center</span><span class="p">(</span>
          <span class="nl">child:</span> <span class="n">Column</span><span class="p">(</span>
            <span class="nl">crossAxisAlignment:</span> <span class="n">CrossAxisAlignment</span><span class="o">.</span><span class="na">center</span><span class="p">,</span>
            <span class="nl">children:</span> <span class="p">[</span>
              <span class="n">Padding</span><span class="p">(</span>
                <span class="nl">padding:</span> <span class="kd">const</span> <span class="n">EdgeInsets</span><span class="o">.</span><span class="na">all</span><span class="p">(</span><span class="mf">15.0</span><span class="p">),</span>
                <span class="nl">child:</span> <span class="n">SizedBox</span><span class="p">(</span>
                  <span class="nl">width:</span> <span class="mi">300</span><span class="p">,</span>
                  <span class="nl">height:</span> <span class="mi">300</span><span class="p">,</span>
                  <span class="nl">child:</span> <span class="n">croppedBlobUrl</span> <span class="o">!=</span> <span class="s">''</span>
                      <span class="o">?</span> <span class="n">CircleAvatar</span><span class="p">(</span>
                          <span class="nl">radius:</span> <span class="mi">50</span><span class="p">,</span> <span class="c1">// 원하는 크기 지정</span>
                          <span class="nl">backgroundColor:</span> <span class="n">Colors</span><span class="o">.</span><span class="na">transparent</span><span class="p">,</span>
                          <span class="nl">backgroundImage:</span> <span class="n">NetworkImage</span><span class="p">(</span><span class="n">croppedBlobUrl</span><span class="p">),</span>
                        <span class="p">)</span>
                      <span class="o">:</span> <span class="kd">const</span> <span class="n">Icon</span><span class="p">(</span><span class="n">Icons</span><span class="o">.</span><span class="na">disabled_by_default_rounded</span><span class="p">),</span>
                <span class="p">),</span>
              <span class="p">),</span>
              <span class="n">ElevatedButton</span><span class="o">.</span><span class="na">icon</span><span class="p">(</span>
                  <span class="nl">onPressed:</span> <span class="p">()</span> <span class="kd">async</span> <span class="p">{</span>
                    <span class="n">pickAndCropImage</span><span class="p">(</span><span class="n">context</span><span class="p">);</span>
                  <span class="p">},</span>
                  <span class="nl">icon:</span> <span class="kd">const</span> <span class="n">Icon</span><span class="p">(</span><span class="n">Icons</span><span class="o">.</span><span class="na">image</span><span class="p">),</span>
                  <span class="nl">label:</span> <span class="kd">const</span> <span class="n">Text</span><span class="p">(</span><span class="s">'pick an image from gallery'</span><span class="p">))</span>
            <span class="p">],</span>
          <span class="p">),</span>
        <span class="p">),</span>
      <span class="p">),</span> 
    <span class="p">);</span>
  <span class="p">}</span>

  <span class="n">Future</span><span class="p">&lt;</span><span class="kt">void</span><span class="p">&gt;</span> <span class="n">pickAndCropImage</span><span class="p">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="p">)</span> <span class="kd">async</span> <span class="p">{</span>
    <span class="n">html</span><span class="o">.</span><span class="na">File</span><span class="o">?</span> <span class="n">imageFile</span> <span class="o">=</span> <span class="p">(</span><span class="k">await</span> <span class="n">ImagePickerWeb</span><span class="o">.</span><span class="na">getMultiImagesAsFile</span><span class="p">())</span><span class="o">?</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>

    <span class="n">setState</span><span class="p">(()</span> <span class="p">{</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">imageFile</span> <span class="o">!=</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">fileName</span> <span class="o">=</span> <span class="n">imageFile</span><span class="o">.</span><span class="na">name</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">context</span><span class="o">.</span><span class="na">mounted</span><span class="p">)</span> <span class="p">{</span>
          <span class="n">cropImage</span><span class="p">(</span><span class="n">imageFile</span><span class="p">,</span> <span class="n">context</span><span class="p">);</span>
        <span class="p">}</span>
      <span class="p">}</span>
    <span class="p">});</span>
  <span class="p">}</span>

  <span class="n">Future</span><span class="p">&lt;</span><span class="kt">void</span><span class="p">&gt;</span> <span class="n">cropImage</span><span class="p">(</span><span class="n">html</span><span class="o">.</span><span class="na">File</span> <span class="n">imageFile</span><span class="p">,</span> <span class="n">context</span><span class="p">)</span> <span class="kd">async</span> <span class="p">{</span>
    <span class="kd">final</span> <span class="n">imageUrl</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="na">Url</span><span class="o">.</span><span class="na">createObjectUrlFromBlob</span><span class="p">(</span><span class="n">imageFile</span><span class="p">);</span>
    <span class="kd">final</span> <span class="n">croppedFile</span> <span class="o">=</span> <span class="k">await</span> <span class="n">ImageCropper</span><span class="p">()</span><span class="o">.</span><span class="na">cropImage</span><span class="p">(</span>
      <span class="nl">sourcePath:</span> <span class="n">imageUrl</span><span class="p">,</span>
      <span class="nl">aspectRatioPresets:</span> <span class="p">[</span>
        <span class="n">CropAspectRatioPreset</span><span class="o">.</span><span class="na">square</span><span class="p">,</span>
        <span class="n">CropAspectRatioPreset</span><span class="o">.</span><span class="na">ratio3x2</span><span class="p">,</span>
        <span class="n">CropAspectRatioPreset</span><span class="o">.</span><span class="na">original</span><span class="p">,</span>
        <span class="n">CropAspectRatioPreset</span><span class="o">.</span><span class="na">ratio4x3</span><span class="p">,</span>
        <span class="n">CropAspectRatioPreset</span><span class="o">.</span><span class="na">ratio16x9</span>
      <span class="p">],</span>
      <span class="nl">uiSettings:</span> <span class="p">[</span><span class="n">WebUiSettings</span><span class="p">(</span><span class="nl">context:</span> <span class="n">context</span><span class="p">)],</span>
    <span class="p">);</span>

    <span class="n">html</span><span class="o">.</span><span class="na">Url</span><span class="o">.</span><span class="na">revokeObjectUrl</span><span class="p">(</span><span class="n">imageUrl</span><span class="p">);</span>

    <span class="n">setState</span><span class="p">(()</span> <span class="p">{</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">croppedFile</span> <span class="o">!=</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">croppedBlobUrl</span> <span class="o">=</span> <span class="n">croppedFile</span><span class="o">.</span><span class="na">path</span><span class="p">;</span>
      <span class="p">}</span>
    <span class="p">});</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="5️⃣-동작-확인">5️⃣ 동작 확인</h3>
<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="n">flutter</span><span class="w"> </span><span class="nx">build</span><span class="w"> </span><span class="nx">web</span><span class="w">
</span><span class="n">flutter</span><span class="w"> </span><span class="nx">run</span><span class="w"> </span><span class="nt">-d</span><span class="w"> </span><span class="nx">chrome</span><span class="w">
</span></pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="6️⃣-결과물">6️⃣ 결과물</h3>
<center><img width="600" src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/edf9762b-b855-4ff4-ae31-65321a69490d" /></center>]]></content><author><name>segyoung</name><email>sseymorrr@gmail.com</email></author><category term="[&quot;flutter&quot;, &quot;solutions&quot;]" /><summary type="html"><![CDATA[플러터 웹에서 이미지를 가져와 크롭해보자!]]></summary></entry><entry><title type="html">[GitHub Pages] minimal-mistakes 테마에서 카테고라이징 하기</title><link href="http://localhost:4000/git/solutions/how-to-categorize-in-minimal-mistakes/" rel="alternate" type="text/html" title="[GitHub Pages] minimal-mistakes 테마에서 카테고라이징 하기" /><published>2024-05-17T00:00:00+09:00</published><updated>2024-05-17T00:00:00+09:00</updated><id>http://localhost:4000/git/solutions/how-to-categorize-in-minimal-mistakes</id><content type="html" xml:base="http://localhost:4000/git/solutions/how-to-categorize-in-minimal-mistakes/"><![CDATA[<h3 id="1️⃣-목표">1️⃣ 목표</h3>
<p>jekyll minimal-mistakes 테마에서 이중으로 카테고리를 분류해보기</p>
<blockquote>
  <p>이렇게! 😀</p>
</blockquote>
<p align="center"><img width="226" alt="Screenshot 2024-05-29 at 7 33 32 PM" src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/53f03224-a1bf-4466-8469-f5b73adc02cc" /></p>

<h3 id="2️⃣-기본-세팅">2️⃣ 기본 세팅</h3>
<h4 id="1-indexhtml">1. index.html</h4>
<div class="language-md highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">home</span>
<span class="na">author_profile</span><span class="pi">:</span> <span class="kc">true</span>
<span class="na">sidebar</span><span class="pi">:</span>
    <span class="na">nav</span><span class="pi">:</span> <span class="s2">"</span><span class="s">sidebar-category"</span> <span class="s">⬅️ 추가된 부분</span>
<span class="nn">---</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h4 id="2-_configyml">2. _config.yml</h4>
<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="c1"># Defaults</span>
<span class="na">defaults</span><span class="pi">:</span>
  <span class="c1"># _posts</span>
  <span class="pi">-</span> <span class="na">scope</span><span class="pi">:</span>
      <span class="na">path</span><span class="pi">:</span> <span class="s2">"</span><span class="s">"</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">posts</span>
    <span class="na">values</span><span class="pi">:</span>
      <span class="na">layout</span><span class="pi">:</span> <span class="s">single</span>
      <span class="na">author_profile</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">read_time</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">comments</span><span class="pi">:</span> <span class="c1"># true</span>
      <span class="na">share</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">related</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">sidebar</span><span class="pi">:</span>
        <span class="na">nav</span><span class="pi">:</span> <span class="s2">"</span><span class="s">sidebar-category"</span> <span class="c1"># 추가된 부분</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="3️⃣-카테고리-설정하기">3️⃣ 카테고리 설정하기</h3>
<h4 id="1-_datanavigationyml">1. _data/navigation.yml</h4>
<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre> <span class="na">sidebar-category</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">🖤</span><span class="nv"> </span><span class="s">flutter"</span>
    <span class="na">children</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">🚫</span><span class="nv"> </span><span class="s">errors"</span>
        <span class="na">url</span><span class="pi">:</span> <span class="s2">"</span><span class="s">flutter/errors/"</span>
      <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">😎</span><span class="nv"> </span><span class="s">solutions"</span>
        <span class="na">url</span><span class="pi">:</span> <span class="s2">"</span><span class="s">flutter/solutions/"</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">🖤</span><span class="nv"> </span><span class="s">ios"</span>
    <span class="na">children</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">✨</span><span class="nv"> </span><span class="s">swift"</span>
        <span class="na">url</span><span class="pi">:</span> <span class="s2">"</span><span class="s">ios/swift/"</span>
      <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">🚫</span><span class="nv"> </span><span class="s">errors"</span>
        <span class="na">url</span><span class="pi">:</span> <span class="s2">"</span><span class="s">ios/errors/"</span>
      <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">😎</span><span class="nv"> </span><span class="s">solutions"</span>
        <span class="na">url</span><span class="pi">:</span> <span class="s2">"</span><span class="s">ios/solutions/"</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h4 id="2-_pages-폴더">2. _pages 폴더</h4>
<p>_pages 폴더 하위에 카테고리에 맞춰 폴더 생성 뒤 각 카테고리를 선택했을 때 보여줄 화면 추가</p>
<ul>
  <li>폴더 구조</li>
</ul>

<p align="center"><img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/67f70570-b8f2-43f0-ab31-8d25ec42f9cb" /></p>

<ul>
  <li>예를 들어 ios/solutions 카테고리를 클릭했을 때 보여질 화면의 코드</li>
</ul>

<p class="notice--info">ios 카테고리에도 포함되고, solutions 카테고리에도 포함된 글들만 가져오는 liquid문을 추가</p>
<div class="language-md highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre>
{% assign posts_with_flutter = site.posts | where: "categories", "flutter" %}
{% assign posts_with_flutter_and_solutions = posts_with_flutter | where: "categories", "solutions" %}

{% for post in posts_with_flutter_and_solutions %}
  {% include archive-single.html type=page.entries_layout %}
{% endfor %}

</pre></td></tr></tbody></table></code></pre></div></div>
<div class="language-md highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="rouge-code"><pre><span class="nn">---</span>
<span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">😎</span><span class="nv"> </span><span class="s">flutter</span><span class="nv"> </span><span class="s">/</span><span class="nv"> </span><span class="s">solutions"</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">category</span>
<span class="na">permalink</span><span class="pi">:</span> <span class="s">/flutter/solutions/</span>
<span class="na">author_profile</span><span class="pi">:</span> <span class="kc">true</span>
<span class="na">sidebar_main</span><span class="pi">:</span> <span class="kc">true</span>
<span class="na">types</span><span class="pi">:</span> <span class="s">posts</span>
<span class="na">taxonomy</span><span class="pi">:</span>
  <span class="na">category</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">flutter</span>
    <span class="pi">-</span> <span class="s">solutions</span>
<span class="na">sidebar</span><span class="pi">:</span>
  <span class="na">nav</span><span class="pi">:</span> <span class="s2">"</span><span class="s">sidebar-category"</span>
  <span class="na">enabled</span><span class="pi">:</span> <span class="kc">true</span>
<span class="nn">---</span>

{% assign posts_with_flutter = site.posts | where: "categories", "flutter" %}
{% assign posts_with_flutter_and_solutions = posts_with_flutter | where: "categories", "solutions" %}

{% for post in posts_with_flutter_and_solutions %}
  {% include archive-single.html type=page.entries_layout %}
{% endfor %}

</pre></td></tr></tbody></table></code></pre></div></div>
<h4 id="3-_posts-폴더">3. _posts 폴더</h4>
<p>루트 폴더에 하위에 카테고리에 맞춰 폴더 추가한 뒤 해당 카테고리 하위에 _posts 폴더 추가</p>
<ul>
  <li>예를 들어 ios/solutions에 해당하는 카테고리에 글을 추가하는 경우 다음과 같이 폴더를 만든 뒤 _post에 <strong>yyyy-mm-dd-글제목.md</strong> 형태로 글을 추가</li>
</ul>

<p align="center"><img src="https://github.com/sseymorr/sseymorr.github.io/assets/169756711/fde6c4c7-3a5f-4673-ae7e-e79c8698f4c8" /></p>

<h3 id="4️⃣-결과">4️⃣ 결과</h3>
<p>flutter/solutions 카테고리를 클릭했을 때 1) flutter 2) solutions <strong>두 개의 카테고리가 모두 설정된 글들만</strong> 선택되어 노출된다! 😎</p>]]></content><author><name>segyoung</name><email>sseymorrr@gmail.com</email></author><category term="[&quot;git&quot;, &quot;solutions&quot;]" /><category term="minimal-mistakes" /><category term="GitHubPages" /><summary type="html"><![CDATA[jekyll minimal-mistakes 테마에서 카테고리를 이중으로 분류해보자!]]></summary></entry></feed>